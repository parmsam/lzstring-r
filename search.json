[{"path":"https://parmsam.github.io/lzstring-r/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 lzstring authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://parmsam.github.io/lzstring-r/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sam Parmar. Author, maintainer. Andrey Krasnov. Copyright holder.           Author included lz-string C++ library Pawel Rucki. Contributor.","code":""},{"path":"https://parmsam.github.io/lzstring-r/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Parmar S (2025). lzstring: Wrapper 'lz-string' 'C++' Library. R package version 0.2.0, https://parmsam.github.io/lzstring-r/.","code":"@Manual{,   title = {lzstring: Wrapper for 'lz-string' 'C++' Library},   author = {Sam Parmar},   year = {2025},   note = {R package version 0.2.0},   url = {https://parmsam.github.io/lzstring-r/}, }"},{"path":"https://parmsam.github.io/lzstring-r/index.html","id":"lzstring-","dir":"","previous_headings":"","what":"Wrapper for lz-string C++ Library","title":"Wrapper for lz-string C++ Library","text":"goal lzstring-r provide R wrapper lzstring C++ library. lzstring originally JavaScript library provides fast efficient string compression decompression using LZ-based algorithm. Credit goes Winston Chang spotting missing R package guiding R Shinylive repo—check awesome contributions repo based . Also, shoutout Andy Kras implementation C++ lzstring, can find right , pieroxy, original brain behind lzstring JavaScript—peek work .","code":""},{"path":"https://parmsam.github.io/lzstring-r/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Wrapper for lz-string C++ Library","text":"can install released version lzstring CRAN : development version GitHub:","code":"install.packages(\"lzstring\") # install.packages(\"devtools\") devtools::install_github(\"parmsam/lzstring-r\")"},{"path":[]},{"path":"https://parmsam.github.io/lzstring-r/index.html","id":"basic-example","dir":"","previous_headings":"Usage","what":"Basic Example","title":"Wrapper for lz-string C++ Library","text":"","code":"library(lzstring)  # Text data message <- \"The quick brown fox jumps over the lazy dog!\" compressed <- lzstring::compressToBase64(message) compressed #> [1] \"CoCwpgBAjgrglgYwNYQEYCcD2B3AdhAM0wA8IArGAWwAcBnCTANzHQgBdwIAbAQwC8AnhAAmmAOYBCIA\"  decompressed <- lzstring::decompressFromBase64(compressed) cat(decompressed) #> The quick brown fox jumps over the lazy dog!"},{"path":"https://parmsam.github.io/lzstring-r/index.html","id":"compressing-and-decompressing-json","dir":"","previous_headings":"Usage","what":"Compressing and Decompressing JSON","title":"Wrapper for lz-string C++ Library","text":"","code":"json_data <- list(name = \"John Doe\", age = 30, email = \"john.doe@example.com\") json_string <- jsonlite::toJSON(json_data)  compressed <- lzstring::compressToBase64(json_string) compressed #> [1] \"N4IgdghgtgpiBcBtEApA9gCzAAgCJrgF0AaECAcziQGYAGEkGKCASwBsFkArTMAOgAmBAAIwAHtAAObGHwDGaKCEIBfIA===\"  decompressed <- lzstring::decompressFromBase64(compressed) identical(json_string, decompressed) #> [1] FALSE cat(decompressed) #> {\"name\":[\"John Doe\"],\"age\":[30],\"email\":[\"john.doe@example.com\"]}"},{"path":"https://parmsam.github.io/lzstring-r/index.html","id":"round-trip-for-complex-r-objects","dir":"","previous_headings":"Usage","what":"Round-Trip for Complex R Objects","title":"Wrapper for lz-string C++ Library","text":"Note: Always serialize complex R objects (lists, data frames, etc.) JSON compressing. decompression, deserialize back R.","code":"obj <- list(a = 1, b = \"text\", c = list(x = 1:3)) json <- jsonlite::serializeJSON(obj) lz <- lzstring::compressToBase64(json) json2 <- lzstring::decompressFromBase64(lz) obj2 <- jsonlite::unserializeJSON(json2) identical(obj, obj2) # TRUE #> [1] TRUE"},{"path":"https://parmsam.github.io/lzstring-r/index.html","id":"r-code-example","dir":"","previous_headings":"Usage","what":"R Code Example","title":"Wrapper for lz-string C++ Library","text":"","code":"r_code <- ' library(dplyr)  data <- data.frame(   name = c(\"John\", \"Jane\", \"Jake\"),   age = c(28, 22, 32),   salary = c(50000, 60000, 55000) )  # Filter data for age greater than 25 filtered_data <- filter(data, age > 25)  # Add a new column with updated salary data <- mutate(data, updated_salary = salary * 1.05) ' compressed <- lzstring::compressToBase64(r_code) compressed #> [1] \"FAGwlgRgTghlCeAKAJgBxPKBKYxkwBcYACAHgFpj8iA6AM1gFsBTRYY4gOxheIF5iAY0QAiAFIB7ABacRAGmLiYnZvMViYAa1VY57YjADmzfkMQAmABwLz5hQGZzu/QGcYIOPFPCArAAYAvwUANkCg4h9/AJwcYABiYgAxMBACZigqQhI6CQyjE0MoZkJ04gIpZWJzH2A6FLSi5AB9ahIKYjrU9JQshXziAD4qn1iEgEFkZAMuZgB3IQkQAFdGTmJZsHLiJdRqZim3DwQ8LLJKRiWiNJ6iBR295sPPUyeEYgAqYgBGGj8R4CAA==\" decompose <- lzstring::decompressFromBase64(compressed) cat(decompose) #>  #> library(dplyr) #>  #> data <- data.frame( #>   name = c(\"John\", \"Jane\", \"Jake\"), #>   age = c(28, 22, 32), #>   salary = c(50000, 60000, 55000) #> ) #>  #> # Filter data for age greater than 25 #> filtered_data <- filter(data, age > 25) #>  #> # Add a new column with updated salary #> data <- mutate(data, updated_salary = salary * 1.05)"},{"path":"https://parmsam.github.io/lzstring-r/index.html","id":"compress-shinylive-hashes","dir":"","previous_headings":"Usage","what":"Compress Shinylive Hashes","title":"Wrapper for lz-string C++ Library","text":"","code":"code <- 'library(shiny) ui <- fluidPage(   \"Hello, world!\" ) server <- function(input, output, session) { } shinyApp(ui, server)' files <- list(   name = jsonlite::unbox(\"app.R\"),   content = jsonlite::unbox(code) ) files_json <- jsonlite::toJSON(list(files)) files_lz <- lzstring::compressToEncodedURIComponent(as.character(files_json)) cat(paste0(\"https://shinylive.io/r/app/#code=\", files_lz)) #> https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKAZwAtaJWAlAB0IAV1oACADwBaCQDNq4gCYAFKAHM47ERIlCwACTjVqRXBIDuRRtWUBCAyOEROcRgDd30ufNEQCUloSdj5UUVILIgjwyIk3Tk5giAEJEBEAXxEePlYAQXR2cQs3T3cBMAyAXSA"},{"path":"https://parmsam.github.io/lzstring-r/index.html","id":"decompress-shinylive-hashes","dir":"","previous_headings":"Usage","what":"Decompress Shinylive Hashes","title":"Wrapper for lz-string C++ Library","text":"","code":"x <- lzstring::decompressFromEncodedURIComponent(\"NobwRAdghgtgpmAXGKAHVA6VBPMAaMAYwHsIAXOcpMAMwCdiYACAZwAsBLCbDOAD1R04LFkw4xUxOmTERUAVzJ4mQiABM4dZfI4AdCPp0YuCsgH0WAGw4a6ACl2RHyxwDlnTAAzKAjJ+9MAEyeAJT64RAAAqq2GBR8ZPoaNExkCXYhiPpMOSpwZPJ0EEw0jhAAVIFioiAmihgQGUzlQQC+jvpgrQC6QA\") y <- jsonlite::fromJSON(x) cat(y$name) #> app.py cat(y$content) #> from shiny.express import input, render, ui #>  #> ui.input_slider(\"n\", \"N\", 0, 100, 20) #>  #>  #> @render.text #> def txt(): #>     return f\"n*2 is {input.n() * 2}\""},{"path":"https://parmsam.github.io/lzstring-r/index.html","id":"encoding-and-limitations","dir":"","previous_headings":"","what":"Encoding and Limitations","title":"Wrapper for lz-string C++ Library","text":"lzstring operates strings. non-string binary data, encode JSON base64 first. Always ensure input UTF-8 encoded. compress R object directly (without serialization), result may decompress expected.","code":""},{"path":"https://parmsam.github.io/lzstring-r/index.html","id":"troubleshooting","dir":"","previous_headings":"","what":"Troubleshooting","title":"Wrapper for lz-string C++ Library","text":"get empty string decompressing? may happen input properly encoded, compressed string corrupted. decompressed JSON fail parse? Ensure serialize R object JSON (use serializeJSON) compressing. Can compress binary data? Encode base64 hex first, compress resulting string.","code":""},{"path":"https://parmsam.github.io/lzstring-r/index.html","id":"use-cases","dir":"","previous_headings":"","what":"Use Cases","title":"Wrapper for lz-string C++ Library","text":"Sharing Shiny app code via URL (see Shinylive) Compact storage large JSON blobs Embedding compressed data web apps Automatic Shinylive links documentation: roxy.shinylive package uses lzstring provide roxygen2 extension automatically takes code @examples tag creates URL shinylive.io service. documentation build, new section added function manual containing link iframe application .","code":""},{"path":"https://parmsam.github.io/lzstring-r/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Wrapper for lz-string C++ Library","text":"lz-string JavaScript library (pieroxy) lz-string C++ port (Andy Kras) Shinylive R roxy.shinylive","code":""},{"path":"https://parmsam.github.io/lzstring-r/reference/compressToBase64.html","id":null,"dir":"Reference","previous_headings":"","what":"Compress a string to Base64 — compressToBase64","title":"Compress a string to Base64 — compressToBase64","text":"function takes string input returns compressed version string Base64 format.","code":""},{"path":"https://parmsam.github.io/lzstring-r/reference/compressToBase64.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compress a string to Base64 — compressToBase64","text":"","code":"compressToBase64(string)"},{"path":"https://parmsam.github.io/lzstring-r/reference/compressToBase64.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compress a string to Base64 — compressToBase64","text":"string character string compressed.","code":""},{"path":"https://parmsam.github.io/lzstring-r/reference/compressToBase64.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compress a string to Base64 — compressToBase64","text":"character string representing compressed input string Base64 format.","code":""},{"path":"https://parmsam.github.io/lzstring-r/reference/compressToBase64.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compress a string to Base64 — compressToBase64","text":"","code":"compressToBase64(\"Hello, world!\") #> [1] \"BIUwNmD2A0AEDukBOYAmBCIA\""},{"path":"https://parmsam.github.io/lzstring-r/reference/compressToEncodedURIComponent.html","id":null,"dir":"Reference","previous_headings":"","what":"Compress a string to Encoded URI Component — compressToEncodedURIComponent","title":"Compress a string to Encoded URI Component — compressToEncodedURIComponent","text":"function takes string input returns compressed version string Encoded URI Component format.","code":""},{"path":"https://parmsam.github.io/lzstring-r/reference/compressToEncodedURIComponent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compress a string to Encoded URI Component — compressToEncodedURIComponent","text":"","code":"compressToEncodedURIComponent(string)"},{"path":"https://parmsam.github.io/lzstring-r/reference/compressToEncodedURIComponent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compress a string to Encoded URI Component — compressToEncodedURIComponent","text":"string character string compressed.","code":""},{"path":"https://parmsam.github.io/lzstring-r/reference/compressToEncodedURIComponent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compress a string to Encoded URI Component — compressToEncodedURIComponent","text":"character string representing compressed input string Encoded URI Component format.","code":""},{"path":"https://parmsam.github.io/lzstring-r/reference/compressToEncodedURIComponent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compress a string to Encoded URI Component — compressToEncodedURIComponent","text":"","code":"compressToEncodedURIComponent(\"Hello, world!\") #> [1] \"BIUwNmD2A0AEDukBOYAmBCIA\""},{"path":"https://parmsam.github.io/lzstring-r/reference/decompressFromBase64.html","id":null,"dir":"Reference","previous_headings":"","what":"Decompress a string from Base64 — decompressFromBase64","title":"Decompress a string from Base64 — decompressFromBase64","text":"function takes compressed string Base64 format input returns decompressed version string.","code":""},{"path":"https://parmsam.github.io/lzstring-r/reference/decompressFromBase64.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decompress a string from Base64 — decompressFromBase64","text":"","code":"decompressFromBase64(string)"},{"path":"https://parmsam.github.io/lzstring-r/reference/decompressFromBase64.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decompress a string from Base64 — decompressFromBase64","text":"string character string Base64 format decompressed.","code":""},{"path":"https://parmsam.github.io/lzstring-r/reference/decompressFromBase64.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decompress a string from Base64 — decompressFromBase64","text":"character string representing decompressed input string.","code":""},{"path":"https://parmsam.github.io/lzstring-r/reference/decompressFromBase64.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decompress a string from Base64 — decompressFromBase64","text":"","code":"x <- compressToBase64(\"Hello, world!\") decompressFromBase64(x) #> [1] \"Hello, world!\""},{"path":"https://parmsam.github.io/lzstring-r/reference/decompressFromEncodedURIComponent.html","id":null,"dir":"Reference","previous_headings":"","what":"Decompress a string from Encoded URI Component — decompressFromEncodedURIComponent","title":"Decompress a string from Encoded URI Component — decompressFromEncodedURIComponent","text":"function takes compressed string Encoded URI Component format input returns decompressed version string.","code":""},{"path":"https://parmsam.github.io/lzstring-r/reference/decompressFromEncodedURIComponent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decompress a string from Encoded URI Component — decompressFromEncodedURIComponent","text":"","code":"decompressFromEncodedURIComponent(string)"},{"path":"https://parmsam.github.io/lzstring-r/reference/decompressFromEncodedURIComponent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decompress a string from Encoded URI Component — decompressFromEncodedURIComponent","text":"string character string Encoded URI Component format decompressed.","code":""},{"path":"https://parmsam.github.io/lzstring-r/reference/decompressFromEncodedURIComponent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decompress a string from Encoded URI Component — decompressFromEncodedURIComponent","text":"character string representing decompressed input string.","code":""},{"path":"https://parmsam.github.io/lzstring-r/reference/decompressFromEncodedURIComponent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decompress a string from Encoded URI Component — decompressFromEncodedURIComponent","text":"","code":"x <- compressToEncodedURIComponent(\"Hello, world!\") decompressFromEncodedURIComponent(x) #> [1] \"Hello, world!\""},{"path":"https://parmsam.github.io/lzstring-r/news/index.html","id":"lzstring-020","dir":"Changelog","previous_headings":"","what":"lzstring 0.2.0","title":"lzstring 0.2.0","text":"Fixed bug compressToEncodedURIComponent caused work complex JSON inputs - #31","code":""},{"path":"https://parmsam.github.io/lzstring-r/news/index.html","id":"lzstring-013","dir":"Changelog","previous_headings":"","what":"lzstring 0.1.3","title":"lzstring 0.1.3","text":"CRAN release: 2024-10-21 Merged bug fix Invalid Byte Order Mark - https://github.com/parmsam/lzstring-r/pull/26","code":""},{"path":"https://parmsam.github.io/lzstring-r/news/index.html","id":"lzstring-0129000","dir":"Changelog","previous_headings":"","what":"lzstring 0.1.2.9000","title":"lzstring 0.1.2.9000","text":"Added NEWS.md file track changes package.","code":""}]
